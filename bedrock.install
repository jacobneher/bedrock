<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function bedrock_install() {
/**
 * variable_get('site_name', '') doesn't work here (no variable_get() calls do for some reason)
 * so we provide the site name here, for any configurations that need it.
 * Example: $site_name will equal something like 'example.com' (no quotes).
 */
  $site_name = str_replace('sites/', '', conf_path());

/**
 * Content Types
 * *****************************************/
  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type'        => 'page',
      'name'        => st('Page'),
      'base'        => 'node_content',
      'description' => st("Use <em>pages</em> for your static content, such as an 'About us' page."),
      'custom'      => 1,
      'modified'    => 1,
      'locked'      => 0,
    ),
    array(
      'type'        => 'article',
      'name'        => st('Article'),
      'base'        => 'node_content',
      'description' => st('Use <em>articles</em> for time-sensitive content like news, press releases or blog posts.'),
      'custom'      => 1,
      'modified'    => 1,
      'locked'      => 0,
    ),
  );
  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  //Set the content types to not display author information
  variable_set('node_submitted_page', 0);
  variable_set('node_submitted_article', 0);

  // Default "Page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);

  // Default "Article" to not be promoted and have comments disabled.
  variable_set('node_options_article', array('status'));
  variable_set('comment_article', COMMENT_NODE_HIDDEN);


/**
 * Webform Module
 * *****************************************/
  // Default "Webform" to not be promoted and have comments disabled.
  variable_set('node_submitted_webform', 0);
  variable_set('node_options_webform', array('status'));
  variable_set('comment_webform', COMMENT_NODE_HIDDEN);


/**
 * Pathauto Module
 * *****************************************/
  variable_set('pathauto_node_pattern', '[node:title]');


/**
 * DB Maintenance Module
 * *****************************************/
  global $databases;
  variable_set('db_maintenance_cron_frequency', '86400');
  variable_set('db_maintenance_cron_last', time());
  variable_set('db_maintenance_log', 0);
  // Get a list of all database using the db_maintenance.module's method
  $db_maintenance = _db_maintenance_list_tables($databases['default']['default']['database']);
  // Tables to add that are not added to db yet when above function is called
//  $db_maintenance['cache_update'] => 'cache_update';
  variable_set('db_maintenance_table_list_' . $databases['default']['default']['database'], $db_maintenance);


/**
 * Environment Indicator Module
 * *****************************************/
  // Reuse the default_environment settings to become the development settings
  $development_settings = array(
    'color'      => '#AA3333',
    'text_color' => '#ffffff',
    'weight'     => '-100',
    'position'   => 'top',
    'fixed'      => 0,
  );
  db_insert('environment_indicator_environment')
    ->fields(array(
      'machine'  => 'development',
      'name'     => 'Development',
      'regexurl' => '[A-Za-z0-9]+\\.(lc|loc|local)',
      'settings' => serialize($development_settings),
    ))
    ->execute();

  // Add a staging environment...
  $staging_settings = array(
    'color'      => '#e26e00',
    'text_color' => '#ffffff',
    'weight'     => '-90',
    'position'   => 'top',
    'fixed'      => 0,
  );
  db_insert('environment_indicator_environment')
    ->fields(array(
      'machine'  => 'staging',
      'name'     => 'Staging',
      'regexurl' => '[A-Za-z0-9]+\\.(tsmhosting|visiontrust)\\.com',
      'settings' => serialize($staging_settings),
    ))
    ->execute();


/**
 * Admin Menu Module
 * *****************************************/
  // Disable the default top margin since adminimal_admin_menu module takes care of that on its own.
  variable_set('admin_menu_margin_top', 0);

  $components = array(
    'admin_menu.icon'    => 1,
    'admin_menu.menu'    => 1,
    'admin_menu.account' => 1,
    'admin_menu.search'  => 0,
    'admin_menu.users'   => 0,
  );
  variable_set('admin_menu_components', $components);


/**
 * External Links Module
 * *****************************************/
  variable_set('extlink_target', '_blank');
  variable_set('extlink_class', 0);
  variable_set('extlink_mailto_class', 0);


/**
 * Backup & Migrate Module
 * *****************************************/
  // Setup Profiles
  $backup_migrate_profiles = array(
    'slim_backup' => array(
      'profile_id'        => 'default',
      'name'              => 'Slim Backup',
      'filename'          => '[site:name]-SLIM',
      'append_timestamp'  => 1,
      'timestamp_format'  => 'Y-m-d\TH-i-s',
      'filters'           => array(
        'compression'                => 'gzip',
        'notify_success_enable'      => FALSE,
        'notify_success_email'       => '',
        'notify_failure_enable'      => FALSE,
        'notify_failure_email'       => '',
        'utils_site_offline'         => FALSE,
        'utils_site_offline_message' => $site_name . ' is currently under maintenance. We should be back shortly. Thank you for your patience.',
        'utils_description'          => '',
        'destinations'               => array(
          'db' => array(
            'exclude_tables' => array(),
            'nodata_tables'  => array(
              'cache'            => 'cache',
              'cache_admin_menu' => 'cache_admin_menu',
              'cache_block'      => 'cache_block',
              'cache_bootstrap'  => 'cache_bootstrap',
              'cache_field'      => 'cache_field',
              'cache_filter'     => 'cache_filter',
              'cache_form'       => 'cache_form',
              'cache_image'      => 'cache_image',
              'cache_libraries'  => 'cache_libraries',
              'cache_menu'       => 'cache_menu',
              'cache_metatag'    => 'cache_metatag',
              'cache_page'       => 'cache_page',
              'cache_path'       => 'cache_path',
              'cache_token'      => 'cache_token',
              'cache_update'     => 'cache_update',
              'cache_views'      => 'cache_views',
              'cache_views_data' => 'cache_views_data',
              'sessions'         => 'sessions',
              'watchdog'         => 'watchdog',
            ),
            'utils_lock_tables' => 0,
            'use_mysqldump'     => 0,
          ),
        ),
      ),
    ),
    'full_backup' => array(
      'profile_id'        => 'full',
      'name'              => 'Full Backup',
      'filename'          => '[site:name]-FULL',
      'append_timestamp'  => 1,
      'timestamp_format'  => 'Y-m-d\TH-i-s',
      'filters'           => array(
        'compression'                => 'gzip',
        'notify_success_enable'      => FALSE,
        'notify_success_email'       => '',
        'notify_failure_enable'      => FALSE,
        'notify_failure_email'       => '',
        'utils_site_offline'         => FALSE,
        'utils_site_offline_message' => $site_name . ' is currently under maintenance. We should be back shortly. Thank you for your patience.',
        'utils_description'          => '',
        'destinations'               => array(
          'db' => array(
            'exclude_tables'    => array(),
            'nodata_tables'     => array(),
            'utils_lock_tables' => 0,
            'use_mysqldump'     => 0,
          ),
        ),
      ),
    ),
  );
  foreach ($backup_migrate_profiles as $backup_migrate_profile) {
    drupal_write_record('backup_migrate_profiles', $backup_migrate_profile);
  }

  // Setup Destinations
  $backup_migrate_destinations = array(
    array(
      'destination_id' => 'scheduled',
      'name'           => 'Scheduled Backups Directory',
      'type'           => 'file',
      'location'       => conf_path() . '/files/backup_migrate/scheduled',
      'settings'       => array(
        'chmod' => 0,
        'chgrp' => 0,
      ),
    ),
  );
  foreach ($backup_migrate_destinations as $backup_migrate_destination) {
    drupal_write_record('backup_migrate_destinations', $backup_migrate_destination);
  }

  // Setup Schedules
  $backup_migrate_schedules = array(
    'daily_backup' => array(
      'schedule_id'    => 'daily_backup',
      'name'           => 'Daily Backup',
      'source_id'      => 'db',
      'destination_id' => 'scheduled',
      'profile_id'     => 'default',
      'keep'           => 30,
      'period'         => 86400,
      'last_run'       => 0,
      'enabled'        => 1,
      'cron'           => 0,
    ),
    'weekly_backup' => array(
      'schedule_id'    => 'weekly_backup',
      'name'           => 'Weekly Backup',
      'source_id'      => 'db',
      'destination_id' => 'scheduled',
      'profile_id'     => 'full',
      'keep'           => 22,
      'period'         => 604800,
      'last_run'       => 0,
      'enabled'        => 1,
      'cron'           => 0,
    ),
  );
  foreach ($backup_migrate_schedules as $backup_migrate_schedule) {
    drupal_write_record('backup_migrate_schedules', $backup_migrate_schedule);
  }


/**
 * MetaTag Module
 * *****************************************/
  $global_metatag = array(
    'instance' => 'global',
    'config'   => array(
      'title' => array(
        'value' => '[current-page:title] - [site:name]',
      ),
      'description' => array(
        'value' => '',
      ),
      'abstract' => array(
        'value' => '',
      ),
      'keywords' => array(
        'value' => '',
      ),
      'robots' => array(
        'value' => array(
          'index'     => 0,
          'follow'    => 0,
          'noindex'   => 0,
          'nofollow'  => 0,
          'noarchive' => 0,
          'nosnippet' => 0,
          'noodp'     => 0,
          'noydir'    => 0,
        ),
      ),
      'news_keywords' => array(
        'value' => '',
      ),
      'generator' => array(
        'value' => 'Drupal 7 (http://drupal.org)',
      ),
      'copyright' => array(
        'value' => '',
      ),
      'image_src' => array(
        'value' => '',
      ),
      'canonical' => array(
        'value' => '[current-page:url:absolute]',
      ),
      'shortlink' => array(
        'value' => '[current-page:url:unaliased]',
      ),
      'publisher' => array(
        'value' => '',
      ),
      'author' => array(
        'value' => '',
      ),
      'original-source' => array(
        'value' => '',
      ),
    ),
  );

  drupal_write_record('metatag_config', $global_metatag);

  $front_page_metatag = array(
    'instance' => 'global:frontpage',
    'config'   => array(
      'title' => array(
        'value' => '[site:name]',
      ),
      'canonical' => array(
        'value' => '[site:url]',
      ),
      'shortlink' => array(
        'value' => '[site:url]',
      ),
      'description' => array(
        'value' => '[node:summary]',
      ),
    ),
  );

  drupal_write_record('metatag_config', $front_page_metatag);

  $content_metatag = array(
    'instance' => 'node',
    'config'   => array(
      'title' => array(
        'value' => '[node:title] - [site:name]',
      ),
      'description' => array(
        'value' => '[node:summary]',
      ),
    ),
  );

  drupal_write_record('metatag_config', $content_metatag);

  // Clear any caches.
  metatag_config_cache_clear();


/**
 * XML Sitemap Module
 * *****************************************/
  $xmlsitemap_included = array(
    'status'   => '1',
    'priority' => '0.5',
  );
  variable_set('xmlsitemap_settings_node_page', $xmlsitemap_included);
  variable_set('xmlsitemap_settings_node_article', $xmlsitemap_included);
  variable_set('xmlsitemap_settings_node_webform', $xmlsitemap_included);


/**
 * Copyright Block Module
 * *****************************************/
  variable_set('copyright_block_start_year', date('Y'));
  variable_set('copyright_block_text', 'Copyright &copy; [copyright_statement:dates] [site:name]');


/**
 * Login Destination Module
 * *****************************************/
  db_insert('login_destination')
    ->fields(array(
      'triggers'         => serialize(array('login' => 'login')),
      'roles'            => serialize(array()),
      'pages_type'       => 0,
      'pages'            => '',
      'destination_type' => 0,
      'destination'      => '<front>',
      'weight'           => -50
    ))
    ->execute();


/**
 * Text Formats, Filtering, and Paths
 * *****************************************/
  // Add text formats.
  $filtered_html_format = array(
    'format'  => 'filtered_html',
    'name'    => 'Filtered HTML',
    'weight'  => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight'   => -49,
        'status'   => 1,
        'settings' => array(
          'filter_url_length' => '72',
        ),
      ),
      // Spamspan filter.
      'spamspan' => array(
        'weight' => -48,
        'status' => 1,
        'settings' => array(
          'spamspan_at'          => ' [at] ',
          'spamspan_use_graphic' => 0,
        ),
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => -47,
        'status' => 1,
      ),
      // Pathologic filter.
      'pathologic' => array(
        'weight'   => -46,
        'status'   => 1,
        'settings' => array(
          'local_paths' => 0,
          'absolute'    => 1,
        ),
      ),
      // HTML filter.
      'filter_html' => array(
        'weight'   => -45,
        'status'   => 1,
        'settings' => array(
          'allowed_html'         => '<a> <em> <strong> <cite> <blockquote> <code> <ul> <ol> <li> <dl> <dt> <dd>',
          'filter_html_help'     => 1,
          'filter_html_nofollow' => 0,
        ),
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => -44,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  // Add the Filtered HTML format to the appropriate roles
  user_role_grant_permissions(2, array('use text format filtered_html'));
  user_role_grant_permissions(3, array('use text format filtered_html'));
  user_role_grant_permissions(4, array('use text format filtered_html'));
  // ... don't need to add role 5 since it gets all permissions

  $full_html_format = array(
    'format' => 'full_html',
    'name'    => 'Full HTML',
    'weight'  => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight'   => 0,
        'status'   => 1,
        'settings' => array(
          'filter_url_length' => '72',
        )
      ),
      // Spamspan filter.
      'spamspan' => array(
        'weight'   => 10,
        'status'   => 1,
        'settings' => array(
          'spamspan_at'          => ' [at] ',
          'spamspan_use_graphic' => 0,
        ),
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
      // Pathologic filter.
      'pathologic' => array(
        'weight'   => 15,
        'status'   => 1,
        'settings' => array(
          'local_paths' => 0,
          'absolute'    => 1,
        ),
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);


/**
 * jQuery Update
 * *****************************************/
  variable_set('jquery_update_jquery_version', '1.7');
  variable_set('jquery_update_jquery_cdn', 'google');
  variable_set('jquery_update_compression_type', 'min');


/**
 * Path Alias
 * *****************************************/
  // Login link
  db_insert('url_alias')
    ->fields(array(
      'source'   => 'user/login',
      'alias'    => 'login',
      'language' => 'und',
    ))
    ->execute();
  // Logout link
  db_insert('url_alias')
    ->fields(array(
      'source'   => 'user/logout',
      'alias'    => 'logout',
      'language' => 'und',
    ))
    ->execute();


/**
 * Content Type: Extras Module
 * *****************************************/
  $content_type_extras_default_settings = array(
    'title_label'                              => 'Title',
    'content_type_extras_remove_body'          => 1,
    'node_preview'                             => 0,
    'content_type_extras_preview_button'       => 'Preview',
    'content_type_extras_save_and_new'         => 0,
    'content_type_extras_save_and_new_button'  => 'Save and New',
    'content_type_extras_save_and_edit'        => 0,
    'content_type_extras_save_and_edit_button' => 'Save and Edit',
    'content_type_extras_cancel'               => 0,
    'node_options'                             => array(
      'status'     => 'status',
        'promote'  => 0,
        'sticky'   => 0,
        'revision' => 0,
      ),
    'node_submitted'   => 0,
    'user_permissions' => array(
      'create_roles' => array(
        '5' => 5,
        '1' => 0,
        '2' => 0,
        '3' => 0,
        '4' => 0,
      ),
      'edit_roles' => array(
        '5' => 5,
        '1' => 0,
        '2' => 0,
        '3' => 0,
        '4' => 0,
      ),
      'delete_roles' => array(
        '5' => 5,
        '1' => 0,
        '2' => 0,
        '3' => 0,
        '4' => 0,
      ),
    ),
    'content_type_extras_descriptions_required'   => 0,
    'content_type_extras_user_permissions_select' => 'cte',
    'content_type_extras_title_hide'              => 0,
    'content_type_extras_title_hide_css'          => 0,
    'content_type_extras_title_hide_front'        => 1,
    'content_type_extras_top_buttons'             => array(
      'manage_fields' => 0,
      'node_edit'     => 0,
    ),
    'xmlsitemap_settings' => array(
      'status'   => '1',
      'priority' => '0.5',
    ),
  );
  variable_set('content_type_extras_default_settings', $content_type_extras_default_settings);


/**
 * Users, Roles, and Permissions
 * *****************************************/
  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access admin theme'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access admin theme'));

  // Create a content contributor role
  $content_editor_role = new stdClass();
  $content_editor_role->name = 'Content Editor';
  $content_editor_role->weight = 2;
  user_role_save($content_editor_role);
  $content_contributor_permissions = array(
    'create article content',
    'create page content',
    'delete any article content',
    'delete any page content',
    'delete own article content',
    'delete own page content',
    'edit any article content',
    'edit any page content',
    'edit own article content',
    'edit own page content',
    'view own unpublished content',
    'view revisions',
    'view the administration theme',
  );
  user_role_grant_permissions($content_editor_role->rid, $content_contributor_permissions);

  // Create a user administrator role
  $content_admin_role = new stdClass();
  $content_admin_role->name = 'Content Administrator';
  $content_admin_role->weight = 3;
  user_role_save($content_admin_role);
  $user_admin_permissions = array(
    'access user profiles',
    'administer main-menu menu items',
    'administer users',
    'change own username',
    'create article content',
    'create page content',
    'delete any article content',
    'delete any page content',
    'delete own article content',
    'delete own page content',
    'edit any article content',
    'edit any page content',
    'edit own article content',
    'edit own page content',
    'revert revisions',
    'view own unpublished content',
    'view revisions',
    'view the administration theme',
  );
  user_role_grant_permissions($content_admin_role->rid, $user_admin_permissions);

  // Create a default role for site administrators, with all available permissions assigned.
  $site_admin_role = new stdClass();
  $site_admin_role->name = 'Site Administrator';
  $site_admin_role->weight = 4;
  user_role_save($site_admin_role);
  user_role_grant_permissions($site_admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $site_admin_role->rid);

  // Assign user 1 the "site administrator" role.
  db_insert('users_roles')
    ->fields(array(
      'uid' => 1,
      'rid' => $site_admin_role->rid,
    ))
    ->execute();


/**
 * Default Site Theme
 * *****************************************/
  // Enable our customized subtheme...
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'flintstones')
    ->execute();

  // Disable Bartik theme since we won't be using that...
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->condition('name', 'bartik')
    ->execute();

  variable_set('theme_default', 'flintstones');


/**
 * Admin Theme (CORE)
 * *****************************************/
  variable_set('admin_theme', 'rubbles');
  variable_set('node_admin_theme', 1);


/**
 * Admin Theme (Contrib)
 * *****************************************/
  variable_set('admin_theme_path', 'user*');

/**
 * Update Module (CORE)
 * *****************************************/
  variable_set('update_notification_threshold', 'security');
  variable_set('update_check_frequency', 1);
  variable_set('update_check_disabled', 0);


/**
 * Date & Time/Regional Settings
 * *****************************************/
  // Date & Time
  variable_set('date_format_long', 'l, F j, Y - g:ia');
  variable_set('date_format_medium', 'F j, Y - g:ia');
  variable_set('date_format_short', 'M j Y - g:ia');
  // Regional
  variable_set('date_first_day', 0);


/**
 * Promote Module (CUSTOM)
 * *****************************************/
  variable_set('promote_link', 'http://threeshadowsmedia.com');
  variable_set('promote_link_text', 'Three Shadows Media');
  variable_set('promote_text', 'Proudly developed and managed by !link');


/**
 * System File Paths
 * *****************************************/
  // Public file path
  variable_set('file_public_path' , conf_path() . '/files');

  // Temporary file path
  variable_set('file_temporary_path', conf_path() . '/files/tmp');

  // We need to create the tmp directory if it doesn't already exist
  if (!file_exists(conf_path() . '/files/tmp')) {
    mkdir(conf_path() . '/files/tmp', 0777, true);
  }

  // Private file path
  $private_path = conf_path() . '/private';
  // Emulate what happens when setting up the private file path manually...
  $form_element = array(
    '#value' => $private_path,
    '#name'  => 'file_private_path',
  );
  system_check_directory($form_element);
  // Set the private file path
  variable_set('file_private_path', $private_path);


/**
 * Miscellaneous Settings
 * *****************************************/
  // Set anonymous user to Guest
  variable_set('anonymous', 'Guest');
  // Only administrators can create accounts
  variable_set('user_register', '0');
  // Set default country
  variable_set('site_default_country', 'US');
  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path'  => '<front>',
    'menu_name'  => 'main-menu',
  );
  menu_link_save($item);
  // Set cron to run every hour
  variable_set('cron_safe_threshold', '3600');
}
