<?php
// $Id: standard.install,v 1.30 2011/01/04 18:24:24 webchick Exp $

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function bedrock_install() {
/**
 * Content Types
 * *****************************************/
  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Page'),
      'base' => 'node_content',
      'description' => st("Use <em>pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
    array(
      'type' => 'article',
      'name' => st('Article'),
      'base' => 'node_content',
      'description' => st('Use <em>articles</em> for time-sensitive content like news, press releases or blog posts.'),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );
  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }
  
  //Set the content types to not display author information
  variable_set('node_submitted_page', 0);
  variable_set('node_submitted_article', 0);
  variable_set('node_submitted_webform', 0);
  
  // Default "Page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);
  
  // Default "Article" to not be promoted and have comments disabled.
  variable_set('node_options_article', array('status'));
  variable_set('comment_article', COMMENT_NODE_HIDDEN);


/**
 * Webform Module
 * *****************************************/
  // Default "Webform" to not be promoted and have comments disabled.
  variable_set('node_options_webform', array('status'));
  variable_set('comment_webform', COMMENT_NODE_HIDDEN);
  
  
/**
 * Pathauto Module
 * *****************************************/
  variable_set('pathauto_node_pattern', '[node:title]');


/**
 * URL Alias Module
 * *****************************************/
  $query = db_insert('url_alias')->fields(array('source', 'alias'));
  $values = array(
    array(
      'source'   => 'user/login',
      'alias'    => 'login',
      'language' => 'und',
    ),
    array(
      'source'   => 'user/logout',
      'alias'    => 'logout',
      'language' => 'und',
    )
  );
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();


/**
 * DB Maintenance Module
 * *****************************************/
  global $databases;
  variable_set('db_maintenance_cron_frequency', '86400');
  variable_set('db_maintenance_cron_last', time());
  variable_set('db_maintenance_log', 0);
  $db_maintenance = array(
    'actions', 'actions', 'authmap', 'authmap', 'backup_migrate_destinations', 'backup_migrate_destinations',
    'backup_migrate_profiles', 'backup_migrate_profiles', 'backup_migrate_schedules',
    'backup_migrate_schedules', 'batch', 'batch', 'block', 'block', 'block_custom', 'block_custom',
    'block_node_type', 'block_node_type', 'block_role', 'block_role', 'blocked_ips', 'blocked_ips', 'cache',
    'cache', 'cache_block', 'cache_block', 'cache_bootstrap', 'cache_bootstrap', 'cache_field', 'cache_field',
    'cache_filter', 'cache_filter', 'cache_form', 'cache_form', 'cache_image', 'cache_image', 'cache_menu',
    'cache_menu', 'cache_page', 'cache_page', 'cache_path', 'cache_path', 'cache_token', 'cache_token',
    'cache_update', 'cache_update', 'cache_views', 'cache_views', 'cache_views_data', 'cache_views_data',
    'cck_field_settings', 'cck_field_settings', 'ctools_css_cache', 'ctools_css_cache', 'ctools_object_cache',
    'ctools_object_cache', 'date_format_locale', 'date_format_locale', 'date_format_type', 'date_format_type',
    'date_formats', 'date_formats', 'field_config', 'field_config', 'field_config_instance',
    'field_config_instance', 'field_data_body', 'field_data_body', 'field_revision_body',
    'field_revision_body', 'file_managed', 'file_managed', 'file_usage', 'file_usage', 'filter', 'filter',
    'filter_format', 'filter_format', 'flood', 'flood', 'history', 'history', 'image_effects',
    'image_effects', 'image_styles', 'image_styles', 'login_destination', 'login_destination', 'menu_custom',
    'menu_custom', 'menu_links', 'menu_links', 'menu_router', 'menu_router', 'node', 'node', 'node_access',
    'node_access', 'node_revision', 'node_revision', 'node_type', 'node_type', 'page_title', 'page_title',
    'queue', 'queue', 'rdf_mapping', 'rdf_mapping', 'registry', 'registry', 'registry_file', 'registry_file',
    'role', 'role', 'role_permission', 'role_permission', 'semaphore', 'semaphore', 'sequences', 'sequences',
    'sessions', 'sessions', 'shortcut_set', 'shortcut_set', 'shortcut_set_users', 'shortcut_set_users',
    'system', 'system', 'taxonomy_index', 'taxonomy_index', 'taxonomy_term_data', 'taxonomy_term_data',
    'taxonomy_term_hierarchy', 'taxonomy_term_hierarchy', 'taxonomy_vocabulary', 'taxonomy_vocabulary',
    'url_alias', 'url_alias', 'users', 'users', 'users_roles', 'users_roles', 'variable', 'variable',
    'views_display', 'views_display', 'views_view', 'views_view', 'watchdog', 'watchdog', 'webform',
    'webform', 'webform_component', 'webform_component', 'webform_emails', 'webform_emails', 'webform_roles',
    'webform_roles', 'webform_submissions', 'webform_submissions', 'webform_submitted_data',
    'webform_submitted_data', 'wysiwyg', 'wysiwyg', 'wysiwyg_user', 'wysiwyg_user', 'xmlsitemap',
    'xmlsitemap', 'xmlsitemap_sitemap', 'xmlsitemap_sitemap'
  );
  variable_set('db_maintenance_table_list_' . $databases['default']['default']['database'], $db_maintenance);


/**
 * Page Title Module
 * *****************************************/  
  variable_set('page_title_front', '[site:name]: [site:slogan]');
  variable_set('page_title_default', '[current-page:page-title] - [site:name]');

  
/**
 * Admin Module
 * *****************************************/  

  $admin_toolbar = array(
    'layout'   => 'vertical',
    'position' => 'nw',
    'behavior' => 'ah',
    'blocks'   => array(
      'admin_tools-clearcache' => 1,
      'admin-create'           => -1,
      'admin-menu'             => 1,
      'admin-devel'            => -1,
      'shortcut-shortcuts'     => -1,
    ),
  );
  variable_set('admin_toolbar', $admin_toolbar);


/**
 * Dev Banner Module
 * *****************************************/
  variable_set('dev_banner_enabled', 1);
  variable_set('dev_banner_image_set', '1');
  variable_set('dev_banner_position', 'se');
  variable_set('dev_banner_sticky', 1);
  variable_set('dev_banner_url_devel', $_SERVER['HTTP_HOST']);


/**
 * External Links Module
 * *****************************************/  
  variable_set('extlink_target', '_blank');
  variable_set('extlink_class', 0);
  variable_set('extlink_mailto_class', 0);


/**
 * Backup & Migrate Module
 * *****************************************/
  // Setup Profiles
  $backup_migrate_profiles = array(
    'slim_backup' => array(
      'profile_id'        => 'default',
      'name'              => 'Slim Backup',
      'filename'          => '[site:name]-SLIM',
      'append_timestamp'  => 1,
      'timestamp_format'  => 'Y-m-d\TH-i-s',
      'filters'           => array(
        'compression'                => 'gzip',
        'notify_success_enable'      => FALSE,
        'notify_success_email'       => variable_get('site_mail', 'noreply@example.com'),
        'notify_failure_enable'      => FALSE,
        'notify_failure_email'       => variable_get('site_mail', 'noreply@example.com'),
        'utils_site_offline'         => FALSE,
        'utils_site_offline_message' => variable_get('site_name', 'Site') . ' is currently under maintenance. We should be back shortly. Thank you for your patience.',
        'exclude_tables'             => array(),
        'nodata_tables'              => array(
          'cache', 'cache', 'cache_block', 'cache_block', 'cache_bootstrap', 'cache_bootstrap', 'cache_field', 'cache_field', 'cache_filter',
          'cache_filter', 'cache_form', 'cache_form', 'cache_image', 'cache_image', 'cache_menu', 'cache_menu', 'cache_page', 'cache_page',
          'cache_path', 'cache_path', 'cache_token', 'cache_token', 'cache_update', 'cache_update', 'cache_views','cache_views',
          'cache_views_data', 'cache_views_data', 'sessions', 'sessions', 'watchdog', 'watchdog',
        ),
      ),
      'utils_lock_tables' => 0,
    ),
    'full_backup' => array(
      'profile_id'        => 'full',
      'name'              => 'Full Backup',
      'filename'          => '[site:name]-FULL',
      'append_timestamp'  => 1,
      'timestamp_format'  => 'Y-m-d\TH-i-s',
      'filters'           => array(
        'compression'                => 'gzip',
        'notify_success_enable'      => FALSE,
        'notify_success_email'       => variable_get('site_mail', 'noreply@example.com'),
        'notify_failure_enable'      => FALSE,
        'notify_failure_email'       => variable_get('site_mail', 'noreply@example.com'),
        'utils_site_offline'         => FALSE,
        'utils_site_offline_message' => variable_get('site_name', 'Site') . ' is currently under maintenance. We should be back shortly. Thank you for your patience.',
        'exclude_tables'             => array(),
        'nodata_tables'              => array(),
      ),
      'utils_lock_tables' => 0,
    ),
  );
  foreach ($backup_migrate_profiles as $backup_migrate_profile) {
    drupal_write_record('backup_migrate_profiles', $backup_migrate_profile);
  }
  
  // Setup Destinations
  $backup_migrate_destinations = array(
    array(
      'destination_id' => 'scheduled',
      'name'           => 'Scheduled Backups Directory',
      'type'           => 'file',
      'location'       => 'sites/default/files/backup_migrate/scheduled',
      'settings'       => array(
        'chmod' => 0,
        'chgrp' => 0,
      ),
    ),
  );
  foreach ($backup_migrate_destinations as $backup_migrate_destination) {
    drupal_write_record('backup_migrate_destinations', $backup_migrate_destination);
  }
  
  // Setup Schedules
  $backup_migrate_schedules = array(
    'daily_backup' => array(
      'schedule_id'    => 'daily_backup',
      'name'           => 'Daily Backup',
      'source_id'      => 'db',
      'destination_id' => 'scheduled',
      'profile_id'     => 'default',
      'keep'           => 30,
      'period'         => 86400,
      'last_run'       => 0,
      'enabled'        => 1,
      'cron'           => 0,
    ),
    'weekly_backup' => array(
      'schedule_id'    => 'weekly_backup',
      'name'           => 'Weekly Backup',
      'source_id'      => 'db',
      'destination_id' => 'scheduled',
      'profile_id'     => 'full',
      'keep'           => 22,
      'period'         => 604800,
      'last_run'       => 0,
      'enabled'        => 1,
      'cron'           => 0,
    ),
  );
  foreach ($backup_migrate_schedules as $backup_migrate_schedule) {
    drupal_write_record('backup_migrate_schedules', $backup_migrate_schedule);
  }


/**
 * XML Sitemap Module
 * *****************************************/
  $xmlsitemap_included = array(
    'status' => '1',
    'priority' => '0.5',
  );
  
  variable_set('xmlsitemap_settings_node_page', $xmlsitemap_included);
  variable_set('xmlsitemap_settings_node_article', $xmlsitemap_included);
  variable_set('xmlsitemap_settings_node_webform', $xmlsitemap_included);

  
/**
 * Login Destination Module
 * *****************************************/
  db_insert('login_destination')
    ->fields(array(
      'triggers' => serialize(array('login' => 'login')),
      'roles' => serialize(array()),
      'pages_type' => 0,
      'pages' => '',
      'destination_type' => 0,
      'destination' => '<front>',
      'weight' => 0
    ))
    ->execute();
  

/**
 * Text Formats, Filtering, and Paths
 * *****************************************/
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
      // Spamspan filter.
      'spamspan' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
      // Spamspan filter.
      'spamspan' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  $full_html_breaking_format = array(
    'format' => 'full_html_w_breaking',
    'name' => 'Full HTML w/ Breaking',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
      // Spamspan filter.
      'spamspan' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_breaking_format = (object) $full_html_breaking_format;
  filter_format_save($full_html_breaking_format);
  

/**
 * Users, Roles, and Permissions
 * *****************************************/
  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format); // $filtered_html_format from Text Format section above
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

  // Create a user administrator role
  $content_admin_role = new stdClass();
  $content_admin_role->name = 'content administrator';
  $content_admin_role->weight = 2;
  user_role_save($content_admin_role);
  $content_admin_permissions = array(
    'access user profiles',
    'administer main-menu menu items',
    'administer users',
    'change own username',
    'create article content',
    'create page content',
    'delete any article content',
    'delete any page content',
    'delete own article content',
    'delete own page content',
    'edit any article content',
    'edit any page content',
    'edit own article content',
    'edit own page content',
    'override article promote to front page option',
    'override article published option',
    'override page promote to front page option',
    'override page published option',
    'revert revisions',
    'use text format filtered_html',
    'view own unpublished content',
    'view revisions',
    'view the administration theme',
  );
  user_role_grant_permissions($content_admin_role, $content_admin_permissions);
  // Create a default role for site administrators, with all available permissions assigned.
  $site_admin_role = new stdClass();
  $site_admin_role->name = 'site administrator';
  $site_admin_role->weight = 3;
  user_role_save($site_admin_role);
  user_role_grant_permissions($site_admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $site_admin_role->rid);

  // Assign user 1 the "site administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $site_admin_role->rid))
    ->execute();


/**
 * Admin Theme (CORE)
 * *****************************************/
  variable_set('admin_theme', 'doohickey');
  variable_set('node_admin_theme', 1);
 

/**
 * Update Module (CORE)
 * *****************************************/
  variable_set('update_notification_threshold', 'security');
  variable_set('update_check_frequency', 1);
  variable_set('update_check_disabled', 0);


/**
 * Miscellaneous Settings
 * *****************************************/
  // Set anonymous user to Guest
  variable_set('anonymous', 'Guest');
  // Only administrators can create accounts
  variable_set('user_register', '0');
  // Set the temporary file path
  variable_set('file_temporary_path', 'sites/default/files/tmp');
  // Set default country
  variable_set('site_default_country', 'US');
}